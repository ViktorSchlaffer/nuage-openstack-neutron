#!/bin/bash
#
# Nuage ml2 mechanism driver
# -----------------------------------------

# Save trace setting
NU_XTRACE=$(set +o | grep xtrace)
set +o xtrace

Q_ML2_PLUGIN_MECHANISM_DRIVERS=${Q_ML2_PLUGIN_MECHANISM_DRIVERS:-nuage}
Q_ML2_PLUGIN_TYPE_DRIVERS=${Q_ML2_PLUGIN_TYPE_DRIVERS:-vxlan}
Q_SERVICE_PLUGIN_CLASSES=${Q_SERVICE_PLUGIN_CLASSES:-NuagePortAttributes,NuageAPI,NuageNetTopology,trunk,NuageL2Bridge,$EXTRA_SERVICE_PLUGIN_CLASSES}
ML2_L3_PLUGIN=nuage_neutron.plugins.common.service_plugins.l3.NuageL3Plugin

function configure_neutron_nuage {
    echo "Configuring ML2 for Nuage"
    OVS_BRIDGE=${OVS_BRIDGE:-alubr0}
    NUAGE_PLUGIN_CONF_DIR=$NEUTRON_CONF_DIR/plugins/nuage
    NUAGE_PLUGIN_CONF_FILE=$NUAGE_PLUGIN_CONF_DIR/plugin.ini

    mkdir -p $NUAGE_PLUGIN_CONF_DIR
    cp $NUAGE_OPENSTACK_NEUTRON_DIR/etc/neutron/plugins/nuage/plugin.ini.sample $NUAGE_PLUGIN_CONF_FILE

    # [PLUGIN]
    iniset $NUAGE_PLUGIN_CONF_FILE plugin experimental_features $NUAGE_EXPERIMENTAL_FEATURES
    iniset $NUAGE_PLUGIN_CONF_FILE plugin enable_debug $NUAGE_ENABLE_DEBUG

    # [RESTPROXY]
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy base_uri $NUAGE_VSD_BASE_URI
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy serverssl $NUAGE_VSD_SERVER_SSL
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy serverauth $NUAGE_VSD_SERVER_AUTH
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy organization $NUAGE_VSD_ORGANIZATION
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy server $NUAGE_VSD_SERVERS
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy auth_resource $NUAGE_VSD_AUTH_RESOURCE
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy default_net_partition_name $NUAGE_VSD_DEF_NETPART_NAME
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy nuage_fip_underlay $NUAGE_FIP_UNDERLAY
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy nuage_pat $NUAGE_PAT
    if [[ "$NUAGE_PAT" == "legacy_disabled" ]]; then
        iniset $NEUTRON_CONF DEFAULT enable_snat_by_default False
    fi
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy nuage_underlay_default $NUAGE_UNDERLAY_DEFAULT

    create_or_retrieve_cms cms_id
    iniset $NUAGE_PLUGIN_CONF_FILE restproxy cms_id $cms_id

    # [nuage_sriov]
    iniset $NUAGE_PLUGIN_CONF_FILE nuage_sriov allow_existing_flat_vlan $NUAGE_SRIOV_ALLOW_EXISTING_FLAT_VLAN


    if ! is_service_enabled q-dhcp ; then
        iniset $NEUTRON_CONF DEFAULT dhcp_agent_notification False
    fi

    iniset $NEUTRON_CONF DEFAULT ipam_driver $NUAGE_IPAM_DRIVER

    neutron_server_config_add $NUAGE_PLUGIN_CONF_FILE
    _neutron_deploy_rootwrap_filters $NUAGE_OPENSTACK_NEUTRON_DIR
}

# Restore xtrace
$NU_XTRACE

