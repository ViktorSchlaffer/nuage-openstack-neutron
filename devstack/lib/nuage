#!/bin/bash
#
# Nuage Neutron Plugin
# ----------------------

# Save trace setting
NU_XTRACE=$(set +o | grep xtrace)
set +o xtrace

function neutron_plugin_create_nova_conf {
    NOVA_OVS_BRIDGE=${NOVA_OVS_BRIDGE:-"br-int"}
    iniset $NOVA_CONF neutron ovs_bridge $NOVA_OVS_BRIDGE
    NOVA_VIF_DRIVER=${NOVA_VIF_DRIVER:-"nova.virt.libvirt.vif.LibvirtGenericVIFDriver"}
    LIBVIRT_FIREWALL_DRIVER=nova.virt.firewall.NoopFirewallDriver
    iniset $NOVA_CONF DEFAULT firewall_driver $LIBVIRT_FIREWALL_DRIVER
}

function neutron_plugin_install_agent_packages {
    :
}

function neutron_plugin_configure_common {
    Q_PLUGIN_CONF_PATH=etc/neutron/plugins/nuage
    Q_PLUGIN_CONF_FILENAME=nuage_plugin.ini
    Q_PLUGIN_CLASS="neutron.plugins.nuage.plugin.NuagePlugin"
    Q_PLUGIN_EXTENSIONS_PATH=neutron/plugins/nuage/extensions
    #Nuage specific Neutron defaults. Actual value must be set and sourced
    NUAGE_VSD_SERVERS=${NUAGE_VSD_SERVERS:-'localhost:8443'}
    NUAGE_VSD_SERVER_AUTH=${NUAGE_VSD_SERVER_AUTH:-'username:password'}
    NUAGE_VSD_ORGANIZATION=${NUAGE_VSD_ORGANIZATION:-'org'}
    NUAGE_VSD_SERVER_SSL=${NUAGE_VSD_SERVER_SSL:-'True'}
    NUAGE_VSD_BASE_URI=${NUAGE_VSD_BASE_URI:-'/'}
    NUAGE_VSD_AUTH_RESOURCE=${NUAGE_VSD_AUTH_RESOURCE:-'/'}
    NUAGE_VSD_DEF_NETPART_NAME=${NUAGE_VSD_DEF_NETPART_NAME:-''}
    NUAGE_VSD_CMS_ID=${NUAGE_VSD_CMS_ID:-''}
}

function neutron_plugin_configure_debug_command {
    :
}

function neutron_plugin_configure_dhcp_agent {
    :
}

function neutron_plugin_configure_l3_agent {
    :
}

function neutron_plugin_configure_plugin_agent {
    :
}

function create_or_retrieve_cms {
    # If NUAGE_VSD_CMS_ID is not set, find or create a cms on VSD.
    if [[ -z "$NUAGE_VSD_CMS_ID" ]]; then
        username=$( echo "${NUAGE_VSD_SERVER_AUTH}" | cut -d ':' -f 1)

        upper_ssl=${NUAGE_VSD_SERVER_SSL^^}
        if [[ "$upper_ssl" = "TRUE" ]]; then
            base_url="https://"
        else
            base_url="http://"
        fi
        base_url+="$NUAGE_VSD_SERVERS"
        base_url+="$NUAGE_VSD_BASE_URI"
        url="$base_url$NUAGE_VSD_AUTH_RESOURCE"

        echo "Connecting to VSD"
        result=$(curl --request GET --insecure --silent --header "Content-Type: application/json" --header "X-Nuage-Organization: $NUAGE_VSD_ORGANIZATION" --user "$NUAGE_VSD_SERVER_AUTH" "$url")
        regex='"APIKey":.?"([^"]*)"'
        [[ ${result} =~ $regex ]]
        apikey="${BASH_REMATCH[1]}"
        echo "Connected"

        mac=`cat /sys/class/net/eth0/address`
        name="OPENSTACK_$mac"
        url="$base_url/cms"

        echo "Trying to find CMS with name: $name"
        result=$(curl --request GET --insecure --silent --header "Content-Type: application/json" --header "X-Nuage-Organization: $NUAGE_VSD_ORGANIZATION" --user "$username:$apikey" "$url")
        regex=".*(\{[^\}]*\"name\":.?\"$name\"[^\}]*\}).*"
        if [[ ${result} =~ $regex ]]; then
            cms="${BASH_REMATCH[1]}"
            regex='"ID":.?"([^"]*)"'
            if [[ ${cms} =~ $regex ]]; then
                NUAGE_VSD_CMS_ID="${BASH_REMATCH[1]}"
            fi
        fi

        if [[ ${NUAGE_VSD_CMS_ID} ]]; then
            echo "Found CMS: $NUAGE_VSD_CMS_ID"
        else
            echo "Could not find existing CMS with name: $name"
            echo "Creating CMS"
            result=$(curl --request POST --insecure --silent --header "Content-Type: application/json" --header "X-Nuage-Organization: $NUAGE_VSD_ORGANIZATION" --user "$username:$apikey" "$url" --data "{\"name\":\"$name\"}")
            regex='"ID":.?"([^"]*)"'
            [[ ${result} =~ $regex ]]
            NUAGE_VSD_CMS_ID="${BASH_REMATCH[1]}"
            echo "Created CMS with id: $NUAGE_VSD_CMS_ID"
        fi
    fi
    eval "$1=${NUAGE_VSD_CMS_ID}"
}

function neutron_plugin_configure_service {
    iniset $NEUTRON_CONF DEFAULT api_extensions_path neutron/plugins/nuage/extensions/
    iniset /$Q_PLUGIN_CONF_FILE restproxy base_uri $NUAGE_VSD_BASE_URI
    iniset /$Q_PLUGIN_CONF_FILE restproxy serverssl $NUAGE_VSD_SERVER_SSL
    iniset /$Q_PLUGIN_CONF_FILE restproxy serverauth $NUAGE_VSD_SERVER_AUTH
    iniset /$Q_PLUGIN_CONF_FILE restproxy organization $NUAGE_VSD_ORGANIZATION
    iniset /$Q_PLUGIN_CONF_FILE restproxy server $NUAGE_VSD_SERVERS
    iniset /$Q_PLUGIN_CONF_FILE restproxy auth_resource $NUAGE_VSD_AUTH_RESOURCE
    iniset /$Q_PLUGIN_CONF_FILE restproxy default_net_partition_name $NUAGE_VSD_DEF_NETPART_NAME
    create_or_retrieve_cms cms_id
    iniset /$Q_PLUGIN_CONF_FILE restproxy cms_id $cms_id
}

function has_neutron_plugin_security_group {
    # 1 means False here
    return 1
}

function neutron_plugin_setup_interface_driver {
    local conf_file=$1
    OVS_BRIDGE=${OVS_BRIDGE:-alubr0}
    iniset $conf_file DEFAULT interface_driver nuage_neutron.lbaas.agent.nuage_interface.NuageInterfaceDriver
    iniset $conf_file DEFAULT ovs_integration_bridge $OVS_BRIDGE
}

# Restore xtrace
$NU_XTRACE
